name: Publish FA Library to Verdaccio
on: 
  workflow_call:
    inputs:
      libFolderName:
        required: true
        type: string
      version:
        required: false
        type: string 
    secrets:
      verdaccioLocation:
        required: true
      verdaccioAuthToken:
        required: true
      slackWebhookUrl:
        required: true
jobs:
  build:
    name: Build and Publish Library
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: Set Git Config
        run: |
          git config --global user.name 'Furious Avocado CI'
          git config --global user.email 'ci@furiousavocado.com'

      - name: Auto Increment Version (if applicable)
        if: ${{ inputs.version == null }}
        run: |
          npm version patch --prefix Assets/${{ inputs.libFolderName }}

      - name: Manually Set Version (if applicable)
        if: ${{ inputs.version != null }}
        run: |
          echo "$(cat Assets/*/package.json | jq '.version = "${{ inputs.version }}"')" > Assets/*/package.json

      - name: Write version and name to ENV for other steps
        run: |
          newVersion=$(cat Assets/*/package.json | jq -r '.version')
          packageName=$(cat Assets/*/package.json | jq -r '.name')
          echo "newVersion=$newVersion" >> $GITHUB_ENV
          echo "packageName=$packageName" >> $GITHUB_ENV
        
      - name: Push version increment to Github
        run: |
          git commit -am "Incrementing Version to $newVersion."
          git push

      - name: Create Tag
        run: |
          git tag -a "v${{ env.newVersion }}" -m "Release Tag ${{ env.newVersion }}."
          git push origin ${{ github.ref_name }} --tags

      - name: Enter the Library Folder Structure
        run: cd Assets/${{ inputs.libFolderName }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2.8.2
        with:
          configuration: changelog_configuration.json
          outputFile: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Samples location
        run: |
          if [[ -d "Samples" ]]; then
            mv Samples Samples~
            rm -f Samples.meta
          fi

      - name: Pass .cs files and wrap with \#ifdef
        run: |
          for scriptFile in `find . -iname "*.cs" -type f`
          do
              shouldWrapFile=false
              usings=( 'Sirenix' 'FuriousAvocado' )

              for using in "${usings[@]}"; do
                  if grep -q -wF -e "$using" "$scriptFile"; then
                      shouldWrapFile=true
                  fi
              done

              if $shouldWrapFile ; then
                  echo '#if ODIN_INSPECTOR && ODIN_INSPECTOR_3 && ODIN_VALIDATOR' > tmp.txt
                  cat $scriptFile >> tmp.txt
                  echo $'#endif' >> tmp.txt
                  mv tmp.txt $scriptFile
              fi
          done

      - name: Publishing to Verdaccio
        run: |
          echo "//${{ secrets.verdaccioLocation }}/:_authToken=${{ secrets.verdaccioAuthToken }}" > .npmrc
          npm publish --registry http://${{ secrets.verdaccioLocation }}

      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.slackWebhookUrl }}
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: "Version ${{ env.newVersion }} of ${{ github.event.repository.name }} published on Verdaccio at http://${{ secrets.verdaccioLocation }}/-/web/detail/${{ env.packageName }}."

