name: Update FA Dependencies
on: 
  workflow_call:
    inputs:
      branchToCheck:
        required: true
        type: string
      reviewer:
        required: true
        type: string
    secrets:
      unityEmail:
        required: true
      unityPassword:
        required: true
      unitySerial:
        required: true
      slackWebhookUrl:
        required: true
jobs:
  build:
    name: Update FA Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
          fetch-depth: 0

      - name: Set Git Config
        run: |
          git config --global user.name 'Furious CI'
          git config --global user.email 'ci@furiousavocado.com'

      - name: Cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
          restore-keys: |
            Library-

      - name: Write branch name for PR to ENV for other steps
        run: echo "branchName='fa_dependencies_update'" >> $GITHUB_ENV

      - name: Get on the PR branch and update
        run: |
          branchExists=$(git ls-remote --heads origin ${{ env.branchName }})
          if [ -z "$branchExists" ]; then
            echo "Making new PR branch ${{ env.branchName }}"
            git checkout -b ${{ env.branchName }}
          else
            echo "PR Branch ${{ env.branchName }} already exists"

            git checkout ${{ env.branchName }}
            git pull

            # reset with latest from inputs.branchToCheck
            # this avoids merge conflicts when existing changes are not merged
            git reset --hard origin/${{ inputs.branchToCheck }}
          fi

      - name: Download Autoupdater Script
        run: curl https://raw.githubusercontent.com/Furious-Avocado/fabrika/master/FADependenciesUpdater.cs -o ${{ github.workspace }}/Assets/FADependencies/Editor/FADependenciesUpdater.cs --create-dirs

      - name: Run autoupdate command
        id: build
        uses: game-ci/unity-builder@v2
        env:
          UNITY_EMAIL: ${{ secrets.unityEmail }}
          UNITY_PASSWORD: ${{ secrets.unityPassword }}
          UNITY_SERIAL: ${{ secrets.unitySerial }}
        with:
          targetPlatform: iOS
          buildMethod: FuriousAvocado.Editor.FADependenciesUpdater.UpdateToLatest
          allowDirtyBuild: true # due to the fact that we download the auto updater script

      - name: Delete Autoupdater Script
        run: |
          rm -rf ${{ github.workspace }}/Assets/FADependencies
          rm -rf ${{ github.workspace }}/Assets/FADependencies.meta

      - name: Check for changes and open PR
        id: pr
        run: |
          # git diff --exit-code >/dev/null 2>&1
          # if [ $? = 1 ]
          if [ -n "git diff" ]
          then
            echo "Updated detected"

            git add -A
            git commit -a -m "Auto updated FA dependencies" --signoff
            git push --force --set-upstream origin ${{ env.branchName }}

            repo=${{ github.repository }}

            echo "https://api.github.com/repos/$repo/pulls"

            # create the PR
            # if PR already exists, then update
            response=$(curl --write-out "%{message}\n" -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                --data '{"title":"Autoupdate FA dependencies","head": "${{ env.branchName }}","base":"${{ inputs.branchToCheck }}", "body":"Auto-generated pull request. \nThis pull request is generated by the FA dependencies auto updater. Checkout this branch, verify the correct update of dependencies and merge it back."}' \
                "https://api.github.com/repos/$repo/pulls")
            
            echo $response

            if [[ "$response" == *"already exist"* ]]; then
              echo "Pull request already opened. Updates were pushed to the existing PR instead"
              echo '::set-output name=msg::FA dependencies updated for $repo. A pull request already exists, please review asap.'
            else
              prNumber=$(echo $response | jq -r .number)

              reviewerResponse=$(curl --write-out "%{message}\n" -X POST -H "Content-Type: application/json" -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                  --data '{"reviewers":["${{ inputs.reviewer }}"]}' \
                  "https://api.github.com/repos/$repo/pulls/$prNumber/requested_reviewers")

              prUrl=$(echo $response | jq -r .html_url)

              echo $reviewerResponse

              echo '::set-output name=msg::FA dependencies updated for $repo. PR opened, please review: $prUrl.'
            fi

          else
            echo "No dependencies updates were detected"
            echo '::set-output name=msg::No update necessary for FA dependencies for $repo.'
          fi
      
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.slackWebhookUrl }}
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: ${{ steps.pr.msg }}